# Creating deployment scripts for Render and Railway for a FastAPI backend

# render.yaml content
render_yaml = """
services:
  - type: web
    name: web4api
    env: python
    plan: free
    buildCommand: "pip install -r requirements.txt"
    startCommand: "uvicorn app:app --host 0.0.0.0 --port 5000"
    envVars:
      - key: ALLOW_ORIGIN
        value: https://web4api.onrender.com
      - key: SENTRY_DSN
        value: <https://55038c1e414932ec8d81c34e5ef120fa@o4509364065402880.ingest.de.sentry.io/4509364112457808>
"""

# railway.json content
railway_json = """
{
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "startCommand": "uvicorn app:app --host 0.0.0.0 --port $PORT"
  },
  "env": {
    "ALLOW_ORIGIN": "https://web4api.onrender.com",
    "SENTRY_DSN": "<https://55038c1e414932ec8d81c34e5ef120fa@o4509364065402880.ingest.de.sentry.io/4509364112457808>"
  }
}
"""

# Save to files
with open("/mnt/data/render.yaml", "w") as f:
    f.write(render_yaml)

with open("/mnt/data/railway.json", "w") as f:
    f.write(railway_json)

"/mnt/data/render.yaml and /mnt/data/railway.json created"

version: "3.7"

services:
  web:
    build: ./nginx/
    image: web4app/nginx:1.0
    container_name: web4app-nginx
    ports:
      - "80:80"
    volumes:
      - ./www/html:/var/www/html
    depends_on:
      - php
    restart: always

  php:
    build: ./php/
    image: web4app/php:1.0
    container_name: web4app-php
    expose:
      - "9000"
    volumes:
      - ./www/html:/var/www/html
    restart: always

  mysql:
    image: mysql:8
    container_name: web4app-mysql
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: web4app-phpmyadmin
    environment:
      PMA_HOST: mysql
    ports:
      - "8080:80"
    depends_on:
      - mysql
    restart: always

volumes:
  mysql_data:
